# -*- coding: utf-8 -*-
"""sentibert.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onqZ58JSV-gGh8hSw_e6dWsz_-3SkxcW
"""

import tensorflow as tf
#num_gpus_available = len(tf.config.experimental.list_physical_devices('GPU'))
#print("Num GPUs Available: ", num_gpus_available)
#assert num_gpus_available > 0
# !pip install transformers
from transformers import DistilBertTokenizerFast
from transformers import TFDistilBertForSequenceClassification
import pandas as pd
import numpy as np

loaded_model = TFDistilBertForSequenceClassification.from_pretrained("./sentiment")

tokenizer = DistilBertTokenizerFast.from_pretrained('distilbert-base-uncased')

def review(str):
  predict_input = tokenizer.encode(str,
                                 truncation=True,
                                 padding=True,
                                 return_tensors="tf")
  tf_output = loaded_model.predict(predict_input)[0]
  tf_prediction = tf.nn.softmax(tf_output, axis=1)
  labels = ['Negative','Positive']
  label = tf.argmax(tf_prediction, axis=1)
  label = label.numpy()
  return int(label)

def percentage(revs):
  pos=0
  count=0
  for r in revs:
    count=count+1
    a=review(r)
    if a==1:
      pos=pos+1
  return int(pos*100/count)

print(review("I am so not happy about this"))